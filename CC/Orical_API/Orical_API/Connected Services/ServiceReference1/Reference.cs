//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WSTransactionHandlerSoap")]
    public interface WSTransactionHandlerSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostOffice_MOE_Payment_prp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostOffice_MOE_Payment_prpAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePayment_prp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdatePayment_prpAsync(string StudentID, long transid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateRecordsInCustom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> UpdateRecordsInCustomAsync(string userId, string hostName, System.DateTime cuurentDateTime, string officeId, string receiptNum, ServiceReference1.UpdateRecordsInCustomItemsToUpdateInCSMTSFees ItemsToUpdateInCSMTSFees, ServiceReference1.UpdateRecordsInCustomItemsToUpdateInMailItem ItemsToUpdateInMailItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostOffice_MOE_Payment_Tablet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostOffice_MOE_Payment_TabletAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePayment_Tablet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdatePayment_TabletAsync(string StudentID, long transid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CallWebService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> CallWebServiceAsync(System.Xml.XmlNode XmlDocumentSOAP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Update_gov_ser_trans_Status_ByTransID_efinance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> Update_gov_ser_trans_Status_ByTransID_efinanceAsync(string TransID, string PmtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPartialPaymentByNationalID1", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPartialPaymentByNationalID1Async(string IDNO, int Egyptpost_NO, int identyfire_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertOrUpdatePartialPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> InsertOrUpdatePartialPaymentAsync(decimal IDNO, int POST_BR_NO, int AMOUNT, int CUSTNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getConsignmentCost", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> getConsignmentCostAsync(string trackingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CustomDeclaration", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> CustomDeclarationAsync(string ReferenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Booking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> BookingAsync(string ReferenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOpeningAndClosingBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOpeningAndClosingBalanceAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsOnlineServiceAvailable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> IsOnlineServiceAvailableAsync();
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersistTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.PersistTransactionResponse> PersistTransactionAsync(ServiceReference1.PersistTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetShiftsForUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetShiftsForUserAsync(string userId, string officeId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetUserListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRolesList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetRolesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUserRolesList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetUserRolesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ModifyTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> ModifyTransactionAsync(string receiptNum, string parcelId, string userId, string officeId, System.DateTime transDate, string postType, ServiceReference1.ArrayOfXElement servicesDetail, ServiceReference1.ArrayOfXElement parcelService, ServiceReference1.ArrayOfXElement paymentDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfflineReceiptCounter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOfflineReceiptCounterAsync(string officeId);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersistOfflineTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.PersistOfflineTransactionResponse> PersistOfflineTransactionAsync(ServiceReference1.PersistOfflineTransactionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersistNonReceiptTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.PersistNonReceiptTransactionResponse> PersistNonReceiptTransactionAsync(ServiceReference1.PersistNonReceiptTransactionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersistNonReceiptOfflineTrx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.PersistNonReceiptOfflineTrxResponse> PersistNonReceiptOfflineTrxAsync(ServiceReference1.PersistNonReceiptOfflineTrxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersistNextCollectedTrx", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.PersistNextCollectedTrxResponse> PersistNextCollectedTrxAsync(ServiceReference1.PersistNextCollectedTrxRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersistCollectionPaymentDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.PersistCollectionPaymentDetailsResponse> PersistCollectionPaymentDetailsAsync(ServiceReference1.PersistCollectionPaymentDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyServiceTrxId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> VerifyServiceTrxIdAsync(string serviceId, string serviceTrxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyPOBox", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> VerifyPOBoxAsync(int boxId, string emirateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/getTTMAIL", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> getTTMAILAsync(string postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyBillingPartyAccountNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> VerifyBillingPartyAccountNumberAsync(string accountNumber, string partyId);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyTransactionForRedeemPoints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.VerifyTransactionForRedeemPointsResponse> VerifyTransactionForRedeemPointsAsync(ServiceReference1.VerifyTransactionForRedeemPointsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyMoneyOrderId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> VerifyMoneyOrderIdAsync(string moneyOrderId);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersistRedeemPoints", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.PersistRedeemPointsResponse> PersistRedeemPointsAsync(ServiceReference1.PersistRedeemPointsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReceiptListForWU", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetReceiptListForWUAsync(ServiceReference1.ArrayOfXElement filterValues, bool isLastTrx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReceiptList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetReceiptListAsync(ServiceReference1.ArrayOfXElement filterValues, bool isLastTrx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeReceiptStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ChangeReceiptStatusAsync(string userId, string officeId, string receiptNo, string postType, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeReceiptStatusForSpecificPostalService", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ChangeReceiptStatusForSpecificPostalServiceAsync(string userId, string officeId, string receiptNo, string postType, string postalserviceid, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ChangeReceiptStatusWU", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ChangeReceiptStatusWUAsync(string userId, string officeId, string receiptNo, string postType, string referenceDoc, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReceiptInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetReceiptInfoAsync(string userId, string officeId, string receiptNo, string postType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetReceiptInfoWithUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetReceiptInfoWithUpdateAsync(string userId, string officeId, string receiptNo, string postType, System.DateTime transDate, string lastModifiedUserId, string lastModifiedTerminal, string lastModifiedOsUser, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomersList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetCustomersListAsync(string whereClause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPoBoxBySearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPoBoxBySearchAsync(int poBoxNo, int emirateId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPoBoxBySearchInternet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPoBoxBySearchInternetAsync(int bookingNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetParcelList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetParcelListAsync(string whereClause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEMSList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetEMSListAsync(string whereClause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAgentList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAgentListAsync(int boxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderServicesBySearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOrderServicesBySearchAsync(int orderNo, string postType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFreeBoxes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetFreeBoxesAsync(string officeId, int boxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRetailItemsList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetRetailItemsListAsync(string officeId, string itemNo, string groupId, string categoryId, string storeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteQuery", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> ExecuteQueryAsync(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteQueryWithConnection", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> ExecuteQueryWithConnectionAsync(string query, string ConnectionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetStockBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetStockBalanceAsync(string officeId, string storeId, string itemNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOPeratorId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOPeratorIdAsync(string userId, string posServiceId, System.DateTime transDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerBillInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetCustomerBillInfoAsync(string accountNo, string billingPartyId, ServiceReference1.ArrayOfXElement dsOnlinePmtInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomerBillSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetCustomerBillSearchAsync(string whereClause);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/isAnyAgentAssociatedWithBox", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> isAnyAgentAssociatedWithBoxAsync(string emirateId, int boxId, int custId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllOtherAgents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAllOtherAgentsAsync(string emirateId, int currentBoxId, int newBoxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllAssociatedAgents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAllAssociatedAgentsAsync(string emirateId, int currentBoxId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllSisterCoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAllSisterCoListAsync(string emirateId, double customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPaymetDetail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPaymetDetailAsync(string userId, string officeId, string salesReceiptNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBarcodes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetBarcodesAsync(string userId, string officeId, string salesReceiptNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsBarCodePresentAndValidated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string[]> IsBarCodePresentAndValidatedAsync(string barCode, string departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteSP", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> ExecuteSPAsync(string func, ServiceReference1.ArrayOfXElement dsOutParams, string barCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAgentIds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAgentIdsAsync(string userId, string officeId, string receiptNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMOLInquiryResult", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetMOLInquiryResultAsync(string postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGenericDataSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetGenericDataSetAsync(ServiceReference1.ArrayOfXElement ds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPendingInquiries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetPendingInquiriesAsync(string inputXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDestinationEndPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetDestinationEndPointAsync(string inputXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCSRDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCSRDetailsAsync(string inputXML);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetArrayList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.GetArrayListResponse> GetArrayListAsync(ServiceReference1.GetArrayListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecuteBatchQueries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ExecuteBatchQueriesAsync(string[] strSqls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVirtualPoBoxRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetVirtualPoBoxRateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVirtualPoBox", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetVirtualPoBoxAsync(ServiceReference1.ArrayOfXElement dsInput);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVirtualPoBoxList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetVirtualPoBoxListAsync(string ParentBoxID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPersonalPOBoxVIPList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetPersonalPOBoxVIPListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOnlineBookingDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOnlineBookingDetailsAsync(string BookingRefNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetOnlineBookingStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> SetOnlineBookingStatusAsync(string BookingRefNo);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PersistTRCTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.PersistTRCTransactionResponse> PersistTRCTransactionAsync(ServiceReference1.PersistTRCTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitCertificateData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SubmitCertificateDataAsync(
                    string BARCODEDATA, 
                    long TransID, 
                    string CERT_NUM, 
                    string CERT_PRINTINGNAME, 
                    int FINEITEMSCNT, 
                    string INVOICE_NUM, 
                    float INVOICE_TOTAL_AMOUNT, 
                    string ISPETITIONREQUEST, 
                    string LICCENTERDESC, 
                    string LICGOVERMENTDESC, 
                    string LICNATIONALITY, 
                    string LICNUM, 
                    string LICOWNERNAME, 
                    string LICTYPEDESC, 
                    string OLDLICGOVERNMENT, 
                    string OLDLICNUM, 
                    string OLDLICTYPEDESC, 
                    float TOTAL_OLDLICFINESVALUE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveAmountDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SaveAmountDetailsAsync(long TransID, float Amount, string SETTLEMENTACCOUNTDESC, string SETTLEMENTACCOUNTINSTITUTIONAL, string SETTLEMENTACCOUNTNAME, string SETTLEMENTACCOUNTNO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNextTrans", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetNextTransAsync(string offid, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveMainPayData", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SaveMainPayDataAsync(
                    string DEPARTMENT_ID, 
                    long TRANS_ID, 
                    System.DateTime CREATED_DATE, 
                    int TRANS_STATUS_CD, 
                    string BARCODE, 
                    string DOCUMENT_TYPE_CD, 
                    string REQUESTER_N_ID, 
                    string FCN, 
                    string REQUESTER_F_NM, 
                    string REQUESTER_L_NM, 
                    string REQUESTER_PHONE, 
                    int RELATION_CD, 
                    string BENEFICIARY_N_ID, 
                    string BENEFICIARY_F_NM, 
                    string BENEFICIARY_L_NM, 
                    string BENEFICIARY_MOTHER_NM, 
                    string SPOUSE_NM, 
                    int COPIES_NO, 
                    double TOTAL_FEES, 
                    int DELIVERY_METHOD_CD, 
                    string FLAT_NO, 
                    string FLOOR_NO, 
                    string BUILDING_NO, 
                    string STREET_NM, 
                    string DISTRICT_NM, 
                    int POLICE_STATION_CD, 
                    string GOVERNORATE_CD, 
                    string OFFICE_ID, 
                    string REFUSE_REASON, 
                    System.DateTime LAST_UPDATED_DATE);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SubmitDataInPetroTradeTranse", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SubmitDataInPetroTradeTranseAsync(
                    string TRANS_ID, 
                    string TRANS_STATUS, 
                    string BARCODE, 
                    string REQUESTER_NM, 
                    double TOTAL_FEES, 
                    double POSTAL_FEES, 
                    double TAX_FEES, 
                    double COMPANY_FEES, 
                    string OFFICE_ID, 
                    string USER_ID, 
                    string CREATED_BY, 
                    string LAST_UPDATED_BY, 
                    string LOG_ERROR, 
                    string REC_FROMDATE, 
                    string REC_TODATE, 
                    bool abTransaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/gettrans_idOffline_PT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> gettrans_idOffline_PTAsync(string office_id, string user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateAndConfirmAccountWithIBM", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> ValidateAndConfirmAccountWithIBMAsync(string AccountNumber, string NID, string AcctType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PaymentRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task PaymentRequestAsync(string Display_Code, int Request_Id, string Request_Serial, string Citizin_Name, string Identification_Number, double Fees_Value, int Registration_Office_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FeesPaidStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task FeesPaidStatusAsync(string Display_Code, int Request_Id, string Request_Serial, string Citizin_Name, string Identification_Number, double Fees_Value, int Registration_Office_Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostOfficePayement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostOfficePayementAsync(string transactionID, string requestSerial, string postOfficeId, string billNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostOfficeConfirmation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostOfficeConfirmationAsync(string transactionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAuthorizationCodeValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAuthorizationCodeValueAsync(string authorizationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdatePaymentAsync(string StudentID, long transid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostOffice_MOE_Payment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostOffice_MOE_PaymentAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostOffice_MOE_Payment_Again_update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PostOffice_MOE_Payment_Again_updateAsync(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdatePayment_Again_update", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> UpdatePayment_Again_updateAsync(string StudentID, long transid);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class UpdateRecordsInCustomItemsToUpdateInCSMTSFees
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://tempuri.org/")]
    public partial class UpdateRecordsInCustomItemsToUpdateInMailItem
    {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlElement any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://www.w3.org/2001/XMLSchema", Order=0)]
        public System.Xml.XmlElement[] Any
        {
            get
            {
                return this.anyField;
            }
            set
            {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="urn:schemas-microsoft-com:xml-diffgram-v1", Order=1)]
        public System.Xml.XmlElement Any1
        {
            get
            {
                return this.any1Field;
            }
            set
            {
                this.any1Field = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistTransaction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistTransactionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string officeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime transDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string postType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public ServiceReference1.ArrayOfXElement servicesDetail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public ServiceReference1.ArrayOfXElement parcelService;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public ServiceReference1.ArrayOfXElement paymentDetail;
        
        public PersistTransactionRequest()
        {
        }
        
        public PersistTransactionRequest(string userId, string officeId, System.DateTime transDate, string postType, ServiceReference1.ArrayOfXElement servicesDetail, ServiceReference1.ArrayOfXElement parcelService, ServiceReference1.ArrayOfXElement paymentDetail)
        {
            this.userId = userId;
            this.officeId = officeId;
            this.transDate = transDate;
            this.postType = postType;
            this.servicesDetail = servicesDetail;
            this.parcelService = parcelService;
            this.paymentDetail = paymentDetail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistTransactionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistTransactionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PersistTransactionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string receiptNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string parcelId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public ServiceReference1.ArrayOfXElement dsOutput;
        
        public PersistTransactionResponse()
        {
        }
        
        public PersistTransactionResponse(bool PersistTransactionResult, string receiptNum, string parcelId, ServiceReference1.ArrayOfXElement dsOutput)
        {
            this.PersistTransactionResult = PersistTransactionResult;
            this.receiptNum = receiptNum;
            this.parcelId = parcelId;
            this.dsOutput = dsOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistOfflineTransaction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistOfflineTransactionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string receiptNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string parcelId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string officeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.DateTime transDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string postType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public ServiceReference1.ArrayOfXElement servicesDetail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public ServiceReference1.ArrayOfXElement parcelService;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public ServiceReference1.ArrayOfXElement paymentDetail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int rcptCounter;
        
        public PersistOfflineTransactionRequest()
        {
        }
        
        public PersistOfflineTransactionRequest(string receiptNum, string parcelId, string userId, string officeId, System.DateTime transDate, string postType, ServiceReference1.ArrayOfXElement servicesDetail, ServiceReference1.ArrayOfXElement parcelService, ServiceReference1.ArrayOfXElement paymentDetail, int rcptCounter)
        {
            this.receiptNum = receiptNum;
            this.parcelId = parcelId;
            this.userId = userId;
            this.officeId = officeId;
            this.transDate = transDate;
            this.postType = postType;
            this.servicesDetail = servicesDetail;
            this.parcelService = parcelService;
            this.paymentDetail = paymentDetail;
            this.rcptCounter = rcptCounter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistOfflineTransactionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistOfflineTransactionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PersistOfflineTransactionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public ServiceReference1.ArrayOfXElement dsOutput;
        
        public PersistOfflineTransactionResponse()
        {
        }
        
        public PersistOfflineTransactionResponse(bool PersistOfflineTransactionResult, ServiceReference1.ArrayOfXElement dsOutput)
        {
            this.PersistOfflineTransactionResult = PersistOfflineTransactionResult;
            this.dsOutput = dsOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistNonReceiptTransaction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistNonReceiptTransactionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string officeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime transDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string postType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public ServiceReference1.ArrayOfXElement dsServiceExtraDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public ServiceReference1.ArrayOfXElement dsServiceMainDetails;
        
        public PersistNonReceiptTransactionRequest()
        {
        }
        
        public PersistNonReceiptTransactionRequest(string userId, string officeId, System.DateTime transDate, string postType, ServiceReference1.ArrayOfXElement dsServiceExtraDetails, ServiceReference1.ArrayOfXElement dsServiceMainDetails)
        {
            this.userId = userId;
            this.officeId = officeId;
            this.transDate = transDate;
            this.postType = postType;
            this.dsServiceExtraDetails = dsServiceExtraDetails;
            this.dsServiceMainDetails = dsServiceMainDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistNonReceiptTransactionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistNonReceiptTransactionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PersistNonReceiptTransactionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serviceTrxId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public ServiceReference1.ArrayOfXElement dsOutput;
        
        public PersistNonReceiptTransactionResponse()
        {
        }
        
        public PersistNonReceiptTransactionResponse(bool PersistNonReceiptTransactionResult, string serviceTrxId, ServiceReference1.ArrayOfXElement dsOutput)
        {
            this.PersistNonReceiptTransactionResult = PersistNonReceiptTransactionResult;
            this.serviceTrxId = serviceTrxId;
            this.dsOutput = dsOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistNonReceiptOfflineTrx", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistNonReceiptOfflineTrxRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string officeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string serviceTrxId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime transDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string postType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public ServiceReference1.ArrayOfXElement serviceExtraDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public ServiceReference1.ArrayOfXElement serviceMainDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int rcptCounter;
        
        public PersistNonReceiptOfflineTrxRequest()
        {
        }
        
        public PersistNonReceiptOfflineTrxRequest(string userId, string officeId, string serviceTrxId, System.DateTime transDate, string postType, ServiceReference1.ArrayOfXElement serviceExtraDetails, ServiceReference1.ArrayOfXElement serviceMainDetails, int rcptCounter)
        {
            this.userId = userId;
            this.officeId = officeId;
            this.serviceTrxId = serviceTrxId;
            this.transDate = transDate;
            this.postType = postType;
            this.serviceExtraDetails = serviceExtraDetails;
            this.serviceMainDetails = serviceMainDetails;
            this.rcptCounter = rcptCounter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistNonReceiptOfflineTrxResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistNonReceiptOfflineTrxResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PersistNonReceiptOfflineTrxResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public ServiceReference1.ArrayOfXElement dsOutput;
        
        public PersistNonReceiptOfflineTrxResponse()
        {
        }
        
        public PersistNonReceiptOfflineTrxResponse(bool PersistNonReceiptOfflineTrxResult, ServiceReference1.ArrayOfXElement dsOutput)
        {
            this.PersistNonReceiptOfflineTrxResult = PersistNonReceiptOfflineTrxResult;
            this.dsOutput = dsOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistNextCollectedTrx", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistNextCollectedTrxRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string receiptNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string officeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime transDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string postType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public ServiceReference1.ArrayOfXElement servicesDetail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public ServiceReference1.ArrayOfXElement parcelService;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public ServiceReference1.ArrayOfXElement paymentDetail;
        
        public PersistNextCollectedTrxRequest()
        {
        }
        
        public PersistNextCollectedTrxRequest(string receiptNum, string userId, string officeId, System.DateTime transDate, string postType, ServiceReference1.ArrayOfXElement servicesDetail, ServiceReference1.ArrayOfXElement parcelService, ServiceReference1.ArrayOfXElement paymentDetail)
        {
            this.receiptNum = receiptNum;
            this.userId = userId;
            this.officeId = officeId;
            this.transDate = transDate;
            this.postType = postType;
            this.servicesDetail = servicesDetail;
            this.parcelService = parcelService;
            this.paymentDetail = paymentDetail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistNextCollectedTrxResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistNextCollectedTrxResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PersistNextCollectedTrxResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string parcelId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public ServiceReference1.ArrayOfXElement dsOutput;
        
        public PersistNextCollectedTrxResponse()
        {
        }
        
        public PersistNextCollectedTrxResponse(bool PersistNextCollectedTrxResult, string parcelId, ServiceReference1.ArrayOfXElement dsOutput)
        {
            this.PersistNextCollectedTrxResult = PersistNextCollectedTrxResult;
            this.parcelId = parcelId;
            this.dsOutput = dsOutput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistCollectionPaymentDetails", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistCollectionPaymentDetailsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string receiptNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string officeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.DateTime paymentDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public ServiceReference1.ArrayOfXElement dsPaymentDetails;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public ServiceReference1.ArrayOfXElement dsRedeemDetails;
        
        public PersistCollectionPaymentDetailsRequest()
        {
        }
        
        public PersistCollectionPaymentDetailsRequest(string receiptNum, string userId, string officeId, System.DateTime paymentDate, ServiceReference1.ArrayOfXElement dsPaymentDetails, ServiceReference1.ArrayOfXElement dsRedeemDetails)
        {
            this.receiptNum = receiptNum;
            this.userId = userId;
            this.officeId = officeId;
            this.paymentDate = paymentDate;
            this.dsPaymentDetails = dsPaymentDetails;
            this.dsRedeemDetails = dsRedeemDetails;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistCollectionPaymentDetailsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistCollectionPaymentDetailsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PersistCollectionPaymentDetailsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public PersistCollectionPaymentDetailsResponse()
        {
        }
        
        public PersistCollectionPaymentDetailsResponse(bool PersistCollectionPaymentDetailsResult, string errorMessage)
        {
            this.PersistCollectionPaymentDetailsResult = PersistCollectionPaymentDetailsResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTransactionForRedeemPoints", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VerifyTransactionForRedeemPointsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.ArrayOfXElement dsService;
        
        public VerifyTransactionForRedeemPointsRequest()
        {
        }
        
        public VerifyTransactionForRedeemPointsRequest(ServiceReference1.ArrayOfXElement dsService)
        {
            this.dsService = dsService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="VerifyTransactionForRedeemPointsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class VerifyTransactionForRedeemPointsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool VerifyTransactionForRedeemPointsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string receiptNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public double amount;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int errorCode;
        
        public VerifyTransactionForRedeemPointsResponse()
        {
        }
        
        public VerifyTransactionForRedeemPointsResponse(bool VerifyTransactionForRedeemPointsResult, string receiptNum, double amount, int errorCode)
        {
            this.VerifyTransactionForRedeemPointsResult = VerifyTransactionForRedeemPointsResult;
            this.receiptNum = receiptNum;
            this.amount = amount;
            this.errorCode = errorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistRedeemPoints", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistRedeemPointsRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ServiceReference1.ArrayOfXElement dsService;
        
        public PersistRedeemPointsRequest()
        {
        }
        
        public PersistRedeemPointsRequest(ServiceReference1.ArrayOfXElement dsService)
        {
            this.dsService = dsService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistRedeemPointsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistRedeemPointsResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PersistRedeemPointsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int errorCode;
        
        public PersistRedeemPointsResponse()
        {
        }
        
        public PersistRedeemPointsResponse(bool PersistRedeemPointsResult, int errorCode)
        {
            this.PersistRedeemPointsResult = PersistRedeemPointsResult;
            this.errorCode = errorCode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetArrayList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetArrayListRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string strSql;
        
        public GetArrayListRequest()
        {
        }
        
        public GetArrayListRequest(string strSql)
        {
            this.strSql = strSql;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetArrayListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetArrayListResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string GetArrayListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] strArray;
        
        public GetArrayListResponse()
        {
        }
        
        public GetArrayListResponse(string GetArrayListResult, string[] strArray)
        {
            this.GetArrayListResult = GetArrayListResult;
            this.strArray = strArray;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistTRCTransaction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistTRCTransactionRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string userId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string officeId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.DateTime transDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string postType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public ServiceReference1.ArrayOfXElement servicesDetail;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public ServiceReference1.ArrayOfXElement parcelService;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public ServiceReference1.ArrayOfXElement paymentDetail;
        
        public PersistTRCTransactionRequest()
        {
        }
        
        public PersistTRCTransactionRequest(string userId, string officeId, System.DateTime transDate, string postType, ServiceReference1.ArrayOfXElement servicesDetail, ServiceReference1.ArrayOfXElement parcelService, ServiceReference1.ArrayOfXElement paymentDetail)
        {
            this.userId = userId;
            this.officeId = officeId;
            this.transDate = transDate;
            this.postType = postType;
            this.servicesDetail = servicesDetail;
            this.parcelService = parcelService;
            this.paymentDetail = paymentDetail;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PersistTRCTransactionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PersistTRCTransactionResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool PersistTRCTransactionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string receiptNum;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string parcelId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public ServiceReference1.ArrayOfXElement dsOutput;
        
        public PersistTRCTransactionResponse()
        {
        }
        
        public PersistTRCTransactionResponse(bool PersistTRCTransactionResult, string receiptNum, string parcelId, ServiceReference1.ArrayOfXElement dsOutput)
        {
            this.PersistTRCTransactionResult = PersistTRCTransactionResult;
            this.receiptNum = receiptNum;
            this.parcelId = parcelId;
            this.dsOutput = dsOutput;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public interface WSTransactionHandlerSoapChannel : ServiceReference1.WSTransactionHandlerSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3-preview3.21351.2")]
    public partial class WSTransactionHandlerSoapClient : System.ServiceModel.ClientBase<ServiceReference1.WSTransactionHandlerSoap>, ServiceReference1.WSTransactionHandlerSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WSTransactionHandlerSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(WSTransactionHandlerSoapClient.GetBindingForEndpoint(endpointConfiguration), WSTransactionHandlerSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSTransactionHandlerSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WSTransactionHandlerSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSTransactionHandlerSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WSTransactionHandlerSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WSTransactionHandlerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> PostOffice_MOE_Payment_prpAsync(string search)
        {
            return base.Channel.PostOffice_MOE_Payment_prpAsync(search);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePayment_prpAsync(string StudentID, long transid)
        {
            return base.Channel.UpdatePayment_prpAsync(StudentID, transid);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateRecordsInCustomAsync(string userId, string hostName, System.DateTime cuurentDateTime, string officeId, string receiptNum, ServiceReference1.UpdateRecordsInCustomItemsToUpdateInCSMTSFees ItemsToUpdateInCSMTSFees, ServiceReference1.UpdateRecordsInCustomItemsToUpdateInMailItem ItemsToUpdateInMailItem)
        {
            return base.Channel.UpdateRecordsInCustomAsync(userId, hostName, cuurentDateTime, officeId, receiptNum, ItemsToUpdateInCSMTSFees, ItemsToUpdateInMailItem);
        }
        
        public System.Threading.Tasks.Task<string> PostOffice_MOE_Payment_TabletAsync(string search)
        {
            return base.Channel.PostOffice_MOE_Payment_TabletAsync(search);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePayment_TabletAsync(string StudentID, long transid)
        {
            return base.Channel.UpdatePayment_TabletAsync(StudentID, transid);
        }
        
        public System.Threading.Tasks.Task<string> CallWebServiceAsync(System.Xml.XmlNode XmlDocumentSOAP)
        {
            return base.Channel.CallWebServiceAsync(XmlDocumentSOAP);
        }
        
        public System.Threading.Tasks.Task<bool> Update_gov_ser_trans_Status_ByTransID_efinanceAsync(string TransID, string PmtId)
        {
            return base.Channel.Update_gov_ser_trans_Status_ByTransID_efinanceAsync(TransID, PmtId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPartialPaymentByNationalID1Async(string IDNO, int Egyptpost_NO, int identyfire_NO)
        {
            return base.Channel.GetPartialPaymentByNationalID1Async(IDNO, Egyptpost_NO, identyfire_NO);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> InsertOrUpdatePartialPaymentAsync(decimal IDNO, int POST_BR_NO, int AMOUNT, int CUSTNO)
        {
            return base.Channel.InsertOrUpdatePartialPaymentAsync(IDNO, POST_BR_NO, AMOUNT, CUSTNO);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> getConsignmentCostAsync(string trackingId)
        {
            return base.Channel.getConsignmentCostAsync(trackingId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> CustomDeclarationAsync(string ReferenceNumber)
        {
            return base.Channel.CustomDeclarationAsync(ReferenceNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> BookingAsync(string ReferenceNumber)
        {
            return base.Channel.BookingAsync(ReferenceNumber);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOpeningAndClosingBalanceAsync(string query)
        {
            return base.Channel.GetOpeningAndClosingBalanceAsync(query);
        }
        
        public System.Threading.Tasks.Task<bool> IsOnlineServiceAvailableAsync()
        {
            return base.Channel.IsOnlineServiceAvailableAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersistTransactionResponse> PersistTransactionAsync(ServiceReference1.PersistTransactionRequest request)
        {
            return base.Channel.PersistTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetShiftsForUserAsync(string userId, string officeId, System.DateTime date)
        {
            return base.Channel.GetShiftsForUserAsync(userId, officeId, date);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetUserListAsync()
        {
            return base.Channel.GetUserListAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetRolesListAsync()
        {
            return base.Channel.GetRolesListAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetUserRolesListAsync()
        {
            return base.Channel.GetUserRolesListAsync();
        }
        
        public System.Threading.Tasks.Task<bool> ModifyTransactionAsync(string receiptNum, string parcelId, string userId, string officeId, System.DateTime transDate, string postType, ServiceReference1.ArrayOfXElement servicesDetail, ServiceReference1.ArrayOfXElement parcelService, ServiceReference1.ArrayOfXElement paymentDetail)
        {
            return base.Channel.ModifyTransactionAsync(receiptNum, parcelId, userId, officeId, transDate, postType, servicesDetail, parcelService, paymentDetail);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOfflineReceiptCounterAsync(string officeId)
        {
            return base.Channel.GetOfflineReceiptCounterAsync(officeId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersistOfflineTransactionResponse> PersistOfflineTransactionAsync(ServiceReference1.PersistOfflineTransactionRequest request)
        {
            return base.Channel.PersistOfflineTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersistNonReceiptTransactionResponse> PersistNonReceiptTransactionAsync(ServiceReference1.PersistNonReceiptTransactionRequest request)
        {
            return base.Channel.PersistNonReceiptTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersistNonReceiptOfflineTrxResponse> PersistNonReceiptOfflineTrxAsync(ServiceReference1.PersistNonReceiptOfflineTrxRequest request)
        {
            return base.Channel.PersistNonReceiptOfflineTrxAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersistNextCollectedTrxResponse> PersistNextCollectedTrxAsync(ServiceReference1.PersistNextCollectedTrxRequest request)
        {
            return base.Channel.PersistNextCollectedTrxAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersistCollectionPaymentDetailsResponse> PersistCollectionPaymentDetailsAsync(ServiceReference1.PersistCollectionPaymentDetailsRequest request)
        {
            return base.Channel.PersistCollectionPaymentDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyServiceTrxIdAsync(string serviceId, string serviceTrxId)
        {
            return base.Channel.VerifyServiceTrxIdAsync(serviceId, serviceTrxId);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyPOBoxAsync(int boxId, string emirateId)
        {
            return base.Channel.VerifyPOBoxAsync(boxId, emirateId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> getTTMAILAsync(string postID)
        {
            return base.Channel.getTTMAILAsync(postID);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyBillingPartyAccountNumberAsync(string accountNumber, string partyId)
        {
            return base.Channel.VerifyBillingPartyAccountNumberAsync(accountNumber, partyId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.VerifyTransactionForRedeemPointsResponse> VerifyTransactionForRedeemPointsAsync(ServiceReference1.VerifyTransactionForRedeemPointsRequest request)
        {
            return base.Channel.VerifyTransactionForRedeemPointsAsync(request);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyMoneyOrderIdAsync(string moneyOrderId)
        {
            return base.Channel.VerifyMoneyOrderIdAsync(moneyOrderId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersistRedeemPointsResponse> PersistRedeemPointsAsync(ServiceReference1.PersistRedeemPointsRequest request)
        {
            return base.Channel.PersistRedeemPointsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetReceiptListForWUAsync(ServiceReference1.ArrayOfXElement filterValues, bool isLastTrx)
        {
            return base.Channel.GetReceiptListForWUAsync(filterValues, isLastTrx);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetReceiptListAsync(ServiceReference1.ArrayOfXElement filterValues, bool isLastTrx)
        {
            return base.Channel.GetReceiptListAsync(filterValues, isLastTrx);
        }
        
        public System.Threading.Tasks.Task<string> ChangeReceiptStatusAsync(string userId, string officeId, string receiptNo, string postType, string status)
        {
            return base.Channel.ChangeReceiptStatusAsync(userId, officeId, receiptNo, postType, status);
        }
        
        public System.Threading.Tasks.Task<string> ChangeReceiptStatusForSpecificPostalServiceAsync(string userId, string officeId, string receiptNo, string postType, string postalserviceid, string status)
        {
            return base.Channel.ChangeReceiptStatusForSpecificPostalServiceAsync(userId, officeId, receiptNo, postType, postalserviceid, status);
        }
        
        public System.Threading.Tasks.Task<string> ChangeReceiptStatusWUAsync(string userId, string officeId, string receiptNo, string postType, string referenceDoc, string status)
        {
            return base.Channel.ChangeReceiptStatusWUAsync(userId, officeId, receiptNo, postType, referenceDoc, status);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetReceiptInfoAsync(string userId, string officeId, string receiptNo, string postType)
        {
            return base.Channel.GetReceiptInfoAsync(userId, officeId, receiptNo, postType);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetReceiptInfoWithUpdateAsync(string userId, string officeId, string receiptNo, string postType, System.DateTime transDate, string lastModifiedUserId, string lastModifiedTerminal, string lastModifiedOsUser, string note)
        {
            return base.Channel.GetReceiptInfoWithUpdateAsync(userId, officeId, receiptNo, postType, transDate, lastModifiedUserId, lastModifiedTerminal, lastModifiedOsUser, note);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetCustomersListAsync(string whereClause)
        {
            return base.Channel.GetCustomersListAsync(whereClause);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPoBoxBySearchAsync(int poBoxNo, int emirateId)
        {
            return base.Channel.GetPoBoxBySearchAsync(poBoxNo, emirateId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPoBoxBySearchInternetAsync(int bookingNo)
        {
            return base.Channel.GetPoBoxBySearchInternetAsync(bookingNo);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetParcelListAsync(string whereClause)
        {
            return base.Channel.GetParcelListAsync(whereClause);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetEMSListAsync(string whereClause)
        {
            return base.Channel.GetEMSListAsync(whereClause);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAgentListAsync(int boxId)
        {
            return base.Channel.GetAgentListAsync(boxId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOrderServicesBySearchAsync(int orderNo, string postType)
        {
            return base.Channel.GetOrderServicesBySearchAsync(orderNo, postType);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetFreeBoxesAsync(string officeId, int boxId)
        {
            return base.Channel.GetFreeBoxesAsync(officeId, boxId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetRetailItemsListAsync(string officeId, string itemNo, string groupId, string categoryId, string storeId)
        {
            return base.Channel.GetRetailItemsListAsync(officeId, itemNo, groupId, categoryId, storeId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> ExecuteQueryAsync(string query)
        {
            return base.Channel.ExecuteQueryAsync(query);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> ExecuteQueryWithConnectionAsync(string query, string ConnectionName)
        {
            return base.Channel.ExecuteQueryWithConnectionAsync(query, ConnectionName);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetStockBalanceAsync(string officeId, string storeId, string itemNo)
        {
            return base.Channel.GetStockBalanceAsync(officeId, storeId, itemNo);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOPeratorIdAsync(string userId, string posServiceId, System.DateTime transDate)
        {
            return base.Channel.GetOPeratorIdAsync(userId, posServiceId, transDate);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetCustomerBillInfoAsync(string accountNo, string billingPartyId, ServiceReference1.ArrayOfXElement dsOnlinePmtInfo)
        {
            return base.Channel.GetCustomerBillInfoAsync(accountNo, billingPartyId, dsOnlinePmtInfo);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetCustomerBillSearchAsync(string whereClause)
        {
            return base.Channel.GetCustomerBillSearchAsync(whereClause);
        }
        
        public System.Threading.Tasks.Task<bool> isAnyAgentAssociatedWithBoxAsync(string emirateId, int boxId, int custId)
        {
            return base.Channel.isAnyAgentAssociatedWithBoxAsync(emirateId, boxId, custId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAllOtherAgentsAsync(string emirateId, int currentBoxId, int newBoxId)
        {
            return base.Channel.GetAllOtherAgentsAsync(emirateId, currentBoxId, newBoxId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAllAssociatedAgentsAsync(string emirateId, int currentBoxId)
        {
            return base.Channel.GetAllAssociatedAgentsAsync(emirateId, currentBoxId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAllSisterCoListAsync(string emirateId, double customerId)
        {
            return base.Channel.GetAllSisterCoListAsync(emirateId, customerId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetPaymetDetailAsync(string userId, string officeId, string salesReceiptNum)
        {
            return base.Channel.GetPaymetDetailAsync(userId, officeId, salesReceiptNum);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetBarcodesAsync(string userId, string officeId, string salesReceiptNum)
        {
            return base.Channel.GetBarcodesAsync(userId, officeId, salesReceiptNum);
        }
        
        public System.Threading.Tasks.Task<string[]> IsBarCodePresentAndValidatedAsync(string barCode, string departmentId)
        {
            return base.Channel.IsBarCodePresentAndValidatedAsync(barCode, departmentId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> ExecuteSPAsync(string func, ServiceReference1.ArrayOfXElement dsOutParams, string barCode)
        {
            return base.Channel.ExecuteSPAsync(func, dsOutParams, barCode);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetAgentIdsAsync(string userId, string officeId, string receiptNum)
        {
            return base.Channel.GetAgentIdsAsync(userId, officeId, receiptNum);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetMOLInquiryResultAsync(string postId)
        {
            return base.Channel.GetMOLInquiryResultAsync(postId);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetGenericDataSetAsync(ServiceReference1.ArrayOfXElement ds)
        {
            return base.Channel.GetGenericDataSetAsync(ds);
        }
        
        public System.Threading.Tasks.Task<string> GetPendingInquiriesAsync(string inputXML)
        {
            return base.Channel.GetPendingInquiriesAsync(inputXML);
        }
        
        public System.Threading.Tasks.Task<string> GetDestinationEndPointAsync(string inputXML)
        {
            return base.Channel.GetDestinationEndPointAsync(inputXML);
        }
        
        public System.Threading.Tasks.Task<string> GetCSRDetailsAsync(string inputXML)
        {
            return base.Channel.GetCSRDetailsAsync(inputXML);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.GetArrayListResponse> GetArrayListAsync(ServiceReference1.GetArrayListRequest request)
        {
            return base.Channel.GetArrayListAsync(request);
        }
        
        public System.Threading.Tasks.Task<string> ExecuteBatchQueriesAsync(string[] strSqls)
        {
            return base.Channel.ExecuteBatchQueriesAsync(strSqls);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetVirtualPoBoxRateAsync()
        {
            return base.Channel.GetVirtualPoBoxRateAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetVirtualPoBoxAsync(ServiceReference1.ArrayOfXElement dsInput)
        {
            return base.Channel.GetVirtualPoBoxAsync(dsInput);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetVirtualPoBoxListAsync(string ParentBoxID)
        {
            return base.Channel.GetVirtualPoBoxListAsync(ParentBoxID);
        }
        
        public System.Threading.Tasks.Task<string> GetPersonalPOBoxVIPListAsync()
        {
            return base.Channel.GetPersonalPOBoxVIPListAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> GetOnlineBookingDetailsAsync(string BookingRefNo)
        {
            return base.Channel.GetOnlineBookingDetailsAsync(BookingRefNo);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> SetOnlineBookingStatusAsync(string BookingRefNo)
        {
            return base.Channel.SetOnlineBookingStatusAsync(BookingRefNo);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PersistTRCTransactionResponse> PersistTRCTransactionAsync(ServiceReference1.PersistTRCTransactionRequest request)
        {
            return base.Channel.PersistTRCTransactionAsync(request);
        }
        
        public System.Threading.Tasks.Task<bool> SubmitCertificateDataAsync(
                    string BARCODEDATA, 
                    long TransID, 
                    string CERT_NUM, 
                    string CERT_PRINTINGNAME, 
                    int FINEITEMSCNT, 
                    string INVOICE_NUM, 
                    float INVOICE_TOTAL_AMOUNT, 
                    string ISPETITIONREQUEST, 
                    string LICCENTERDESC, 
                    string LICGOVERMENTDESC, 
                    string LICNATIONALITY, 
                    string LICNUM, 
                    string LICOWNERNAME, 
                    string LICTYPEDESC, 
                    string OLDLICGOVERNMENT, 
                    string OLDLICNUM, 
                    string OLDLICTYPEDESC, 
                    float TOTAL_OLDLICFINESVALUE)
        {
            return base.Channel.SubmitCertificateDataAsync(BARCODEDATA, TransID, CERT_NUM, CERT_PRINTINGNAME, FINEITEMSCNT, INVOICE_NUM, INVOICE_TOTAL_AMOUNT, ISPETITIONREQUEST, LICCENTERDESC, LICGOVERMENTDESC, LICNATIONALITY, LICNUM, LICOWNERNAME, LICTYPEDESC, OLDLICGOVERNMENT, OLDLICNUM, OLDLICTYPEDESC, TOTAL_OLDLICFINESVALUE);
        }
        
        public System.Threading.Tasks.Task<bool> SaveAmountDetailsAsync(long TransID, float Amount, string SETTLEMENTACCOUNTDESC, string SETTLEMENTACCOUNTINSTITUTIONAL, string SETTLEMENTACCOUNTNAME, string SETTLEMENTACCOUNTNO)
        {
            return base.Channel.SaveAmountDetailsAsync(TransID, Amount, SETTLEMENTACCOUNTDESC, SETTLEMENTACCOUNTINSTITUTIONAL, SETTLEMENTACCOUNTNAME, SETTLEMENTACCOUNTNO);
        }
        
        public System.Threading.Tasks.Task<string> GetNextTransAsync(string offid, string userid)
        {
            return base.Channel.GetNextTransAsync(offid, userid);
        }
        
        public System.Threading.Tasks.Task<bool> SaveMainPayDataAsync(
                    string DEPARTMENT_ID, 
                    long TRANS_ID, 
                    System.DateTime CREATED_DATE, 
                    int TRANS_STATUS_CD, 
                    string BARCODE, 
                    string DOCUMENT_TYPE_CD, 
                    string REQUESTER_N_ID, 
                    string FCN, 
                    string REQUESTER_F_NM, 
                    string REQUESTER_L_NM, 
                    string REQUESTER_PHONE, 
                    int RELATION_CD, 
                    string BENEFICIARY_N_ID, 
                    string BENEFICIARY_F_NM, 
                    string BENEFICIARY_L_NM, 
                    string BENEFICIARY_MOTHER_NM, 
                    string SPOUSE_NM, 
                    int COPIES_NO, 
                    double TOTAL_FEES, 
                    int DELIVERY_METHOD_CD, 
                    string FLAT_NO, 
                    string FLOOR_NO, 
                    string BUILDING_NO, 
                    string STREET_NM, 
                    string DISTRICT_NM, 
                    int POLICE_STATION_CD, 
                    string GOVERNORATE_CD, 
                    string OFFICE_ID, 
                    string REFUSE_REASON, 
                    System.DateTime LAST_UPDATED_DATE)
        {
            return base.Channel.SaveMainPayDataAsync(DEPARTMENT_ID, TRANS_ID, CREATED_DATE, TRANS_STATUS_CD, BARCODE, DOCUMENT_TYPE_CD, REQUESTER_N_ID, FCN, REQUESTER_F_NM, REQUESTER_L_NM, REQUESTER_PHONE, RELATION_CD, BENEFICIARY_N_ID, BENEFICIARY_F_NM, BENEFICIARY_L_NM, BENEFICIARY_MOTHER_NM, SPOUSE_NM, COPIES_NO, TOTAL_FEES, DELIVERY_METHOD_CD, FLAT_NO, FLOOR_NO, BUILDING_NO, STREET_NM, DISTRICT_NM, POLICE_STATION_CD, GOVERNORATE_CD, OFFICE_ID, REFUSE_REASON, LAST_UPDATED_DATE);
        }
        
        public System.Threading.Tasks.Task<bool> SubmitDataInPetroTradeTranseAsync(
                    string TRANS_ID, 
                    string TRANS_STATUS, 
                    string BARCODE, 
                    string REQUESTER_NM, 
                    double TOTAL_FEES, 
                    double POSTAL_FEES, 
                    double TAX_FEES, 
                    double COMPANY_FEES, 
                    string OFFICE_ID, 
                    string USER_ID, 
                    string CREATED_BY, 
                    string LAST_UPDATED_BY, 
                    string LOG_ERROR, 
                    string REC_FROMDATE, 
                    string REC_TODATE, 
                    bool abTransaction)
        {
            return base.Channel.SubmitDataInPetroTradeTranseAsync(TRANS_ID, TRANS_STATUS, BARCODE, REQUESTER_NM, TOTAL_FEES, POSTAL_FEES, TAX_FEES, COMPANY_FEES, OFFICE_ID, USER_ID, CREATED_BY, LAST_UPDATED_BY, LOG_ERROR, REC_FROMDATE, REC_TODATE, abTransaction);
        }
        
        public System.Threading.Tasks.Task<string> gettrans_idOffline_PTAsync(string office_id, string user_id)
        {
            return base.Channel.gettrans_idOffline_PTAsync(office_id, user_id);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.ArrayOfXElement> ValidateAndConfirmAccountWithIBMAsync(string AccountNumber, string NID, string AcctType)
        {
            return base.Channel.ValidateAndConfirmAccountWithIBMAsync(AccountNumber, NID, AcctType);
        }
        
        public System.Threading.Tasks.Task PaymentRequestAsync(string Display_Code, int Request_Id, string Request_Serial, string Citizin_Name, string Identification_Number, double Fees_Value, int Registration_Office_Code)
        {
            return base.Channel.PaymentRequestAsync(Display_Code, Request_Id, Request_Serial, Citizin_Name, Identification_Number, Fees_Value, Registration_Office_Code);
        }
        
        public System.Threading.Tasks.Task FeesPaidStatusAsync(string Display_Code, int Request_Id, string Request_Serial, string Citizin_Name, string Identification_Number, double Fees_Value, int Registration_Office_Code)
        {
            return base.Channel.FeesPaidStatusAsync(Display_Code, Request_Id, Request_Serial, Citizin_Name, Identification_Number, Fees_Value, Registration_Office_Code);
        }
        
        public System.Threading.Tasks.Task<string> PostOfficePayementAsync(string transactionID, string requestSerial, string postOfficeId, string billNo)
        {
            return base.Channel.PostOfficePayementAsync(transactionID, requestSerial, postOfficeId, billNo);
        }
        
        public System.Threading.Tasks.Task<string> PostOfficeConfirmationAsync(string transactionID)
        {
            return base.Channel.PostOfficeConfirmationAsync(transactionID);
        }
        
        public System.Threading.Tasks.Task<string> GetAuthorizationCodeValueAsync(string authorizationCode)
        {
            return base.Channel.GetAuthorizationCodeValueAsync(authorizationCode);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePaymentAsync(string StudentID, long transid)
        {
            return base.Channel.UpdatePaymentAsync(StudentID, transid);
        }
        
        public System.Threading.Tasks.Task<string> PostOffice_MOE_PaymentAsync(string search)
        {
            return base.Channel.PostOffice_MOE_PaymentAsync(search);
        }
        
        public System.Threading.Tasks.Task<string> PostOffice_MOE_Payment_Again_updateAsync(string search)
        {
            return base.Channel.PostOffice_MOE_Payment_Again_updateAsync(search);
        }
        
        public System.Threading.Tasks.Task<string> UpdatePayment_Again_updateAsync(string StudentID, long transid)
        {
            return base.Channel.UpdatePayment_Again_updateAsync(StudentID, transid);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSTransactionHandlerSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.WSTransactionHandlerSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSTransactionHandlerSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://10.10.82.222:1456/TransactionHandlerServices/WSTransactionHandler.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.WSTransactionHandlerSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://10.10.82.222:1456/TransactionHandlerServices/WSTransactionHandler.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            WSTransactionHandlerSoap,
            
            WSTransactionHandlerSoap12,
        }
    }
    
    [System.Xml.Serialization.XmlSchemaProviderAttribute(null, IsAny=true)]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil-lib", "2.0.3.0")]
    public partial class ArrayOfXElement : object, System.Xml.Serialization.IXmlSerializable
    {
        
        private System.Collections.Generic.List<System.Xml.Linq.XElement> nodesList = new System.Collections.Generic.List<System.Xml.Linq.XElement>();
        
        public ArrayOfXElement()
        {
        }
        
        public virtual System.Collections.Generic.List<System.Xml.Linq.XElement> Nodes
        {
            get
            {
                return this.nodesList;
            }
        }
        
        public virtual System.Xml.Schema.XmlSchema GetSchema()
        {
            throw new System.NotImplementedException();
        }
        
        public virtual void WriteXml(System.Xml.XmlWriter writer)
        {
            System.Collections.Generic.IEnumerator<System.Xml.Linq.XElement> e = nodesList.GetEnumerator();
            for (
            ; e.MoveNext(); 
            )
            {
                ((System.Xml.Serialization.IXmlSerializable)(e.Current)).WriteXml(writer);
            }
        }
        
        public virtual void ReadXml(System.Xml.XmlReader reader)
        {
            for (
            ; (reader.NodeType != System.Xml.XmlNodeType.EndElement); 
            )
            {
                if ((reader.NodeType == System.Xml.XmlNodeType.Element))
                {
                    System.Xml.Linq.XElement elem = new System.Xml.Linq.XElement("default");
                    ((System.Xml.Serialization.IXmlSerializable)(elem)).ReadXml(reader);
                    Nodes.Add(elem);
                }
                else
                {
                    reader.Skip();
                }
            }
        }
    }
}
